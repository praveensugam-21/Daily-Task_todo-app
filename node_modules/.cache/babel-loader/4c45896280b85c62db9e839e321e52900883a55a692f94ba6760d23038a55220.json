{"ast":null,"code":"import _objectSpread from\"E:/Infogerm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import MotivationalSummary from\"./components/MotivationalSummary\";import TodayTasks from\"./components/TodayTasks\";import AddTaskForm from\"./components/AddTaskForm\";import TaskHistory from\"./components/TaskHistory\";import{generateMotivationalMessage}from\"./utils/aiService\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState(()=>{const savedTasks=localStorage.getItem(\"todo-tasks\");return savedTasks?JSON.parse(savedTasks):[];});const[motivationalMessage,setMotivationalMessage]=useState(\"\");const[isLoadingMessage,setIsLoadingMessage]=useState(true);const[messageError,setMessageError]=useState(\"\");// Save tasks to localStorage whenever tasks change\nuseEffect(()=>{localStorage.setItem(\"todo-tasks\",JSON.stringify(tasks));},[tasks]);// Function to fetch motivational message\nconst fetchMotivationalMessage=async()=>{try{setIsLoadingMessage(true);setMessageError(\"\");const message=await generateMotivationalMessage(tasks);setMotivationalMessage(message);}catch(error){setMessageError(\"Failed to load motivational message. Please try again later.\");console.error(\"Error fetching motivational message:\",error);}finally{setIsLoadingMessage(false);}};// Generate motivational message on component mount\nuseEffect(()=>{fetchMotivationalMessage();},[tasks]);const addTask=taskText=>{const newTask={id:Date.now(),text:taskText,completed:false,createdAt:new Date().toISOString(),date:new Date().toISOString().split(\"T\")[0]};setTasks(prevTasks=>[newTask,...prevTasks]);};const toggleTask=taskId=>{setTasks(prevTasks=>prevTasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{completed:!task.completed}):task));};const deleteTask=taskId=>{setTasks(prevTasks=>prevTasks.filter(task=>task.id!==taskId));};const getTodayTasks=()=>{const today=new Date().toISOString().split(\"T\")[0];return tasks.filter(task=>task.date===today);};const getPreviousTasks=()=>{const today=new Date().toISOString().split(\"T\")[0];return tasks.filter(task=>task.date!==today);};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8 max-w-4xl\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-gray-900 mb-2\",children:\"Daily Todo App\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Stay organized and motivated with AI-powered insights\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(MotivationalSummary,{message:motivationalMessage,isLoading:isLoadingMessage,error:messageError,onRefresh:fetchMotivationalMessage}),/*#__PURE__*/_jsx(AddTaskForm,{onAddTask:addTask}),/*#__PURE__*/_jsx(TodayTasks,{tasks:getTodayTasks(),onToggleTask:toggleTask,onDeleteTask:deleteTask}),/*#__PURE__*/_jsx(TaskHistory,{tasks:getPreviousTasks()})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","MotivationalSummary","TodayTasks","AddTaskForm","TaskHistory","generateMotivationalMessage","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","motivationalMessage","setMotivationalMessage","isLoadingMessage","setIsLoadingMessage","messageError","setMessageError","setItem","stringify","fetchMotivationalMessage","message","error","console","addTask","taskText","newTask","id","Date","now","text","completed","createdAt","toISOString","date","split","prevTasks","toggleTask","taskId","map","task","_objectSpread","deleteTask","filter","getTodayTasks","today","getPreviousTasks","className","children","isLoading","onRefresh","onAddTask","onToggleTask","onDeleteTask"],"sources":["E:/Infogerm/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MotivationalSummary from \"./components/MotivationalSummary\";\r\nimport TodayTasks from \"./components/TodayTasks\";\r\nimport AddTaskForm from \"./components/AddTaskForm\";\r\nimport TaskHistory from \"./components/TaskHistory\";\r\nimport { generateMotivationalMessage } from \"./utils/aiService\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"todo-tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n\r\n  const [motivationalMessage, setMotivationalMessage] = useState(\"\");\r\n  const [isLoadingMessage, setIsLoadingMessage] = useState(true);\r\n  const [messageError, setMessageError] = useState(\"\");\r\n\r\n  // Save tasks to localStorage whenever tasks change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo-tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Function to fetch motivational message\r\n  const fetchMotivationalMessage = async () => {\r\n    try {\r\n      setIsLoadingMessage(true);\r\n      setMessageError(\"\");\r\n      const message = await generateMotivationalMessage(tasks);\r\n      setMotivationalMessage(message);\r\n    } catch (error) {\r\n      setMessageError(\r\n        \"Failed to load motivational message. Please try again later.\"\r\n      );\r\n      console.error(\"Error fetching motivational message:\", error);\r\n    } finally {\r\n      setIsLoadingMessage(false);\r\n    }\r\n  };\r\n\r\n  // Generate motivational message on component mount\r\n  useEffect(() => {\r\n    fetchMotivationalMessage();\r\n  }, [tasks]);\r\n\r\n  const addTask = (taskText) => {\r\n    const newTask = {\r\n      id: Date.now(),\r\n      text: taskText,\r\n      completed: false,\r\n      createdAt: new Date().toISOString(),\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n    };\r\n    setTasks((prevTasks) => [newTask, ...prevTasks]);\r\n  };\r\n\r\n  const toggleTask = (taskId) => {\r\n    setTasks((prevTasks) =>\r\n      prevTasks.map((task) =>\r\n        task.id === taskId ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  const getTodayTasks = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    return tasks.filter((task) => task.date === today);\r\n  };\r\n\r\n  const getPreviousTasks = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    return tasks.filter((task) => task.date !== today);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n        <header className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\r\n            Daily Todo App\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Stay organized and motivated with AI-powered insights\r\n          </p>\r\n        </header>\r\n\r\n        <div className=\"space-y-6\">\r\n          {/* Motivational Summary Section */}\r\n          <MotivationalSummary\r\n            message={motivationalMessage}\r\n            isLoading={isLoadingMessage}\r\n            error={messageError}\r\n            onRefresh={fetchMotivationalMessage}\r\n          />\r\n\r\n          {/* Add Task Form */}\r\n          <AddTaskForm onAddTask={addTask} />\r\n\r\n          {/* Today's Tasks Section */}\r\n          <TodayTasks\r\n            tasks={getTodayTasks()}\r\n            onToggleTask={toggleTask}\r\n            onDeleteTask={deleteTask}\r\n          />\r\n\r\n          {/* Task History Section */}\r\n          <TaskHistory tasks={getPreviousTasks()} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}