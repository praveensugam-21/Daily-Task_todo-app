{"ast":null,"code":"var _jsxFileName = \"E:\\\\Infogerm\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MotivationalSummary from \"./components/MotivationalSummary\";\nimport TodayTasks from \"./components/TodayTasks\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport TaskHistory from \"./components/TaskHistory\";\nimport { generateMotivationalMessage } from \"./utils/aiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"todo-tasks\");\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  const [motivationalMessage, setMotivationalMessage] = useState(\"\");\n  const [isLoadingMessage, setIsLoadingMessage] = useState(true);\n  const [messageError, setMessageError] = useState(\"\");\n\n  // Save tasks to localStorage whenever tasks change\n  useEffect(() => {\n    localStorage.setItem(\"todo-tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Generate motivational message on component mount\n  useEffect(() => {\n    const fetchMotivationalMessage = async () => {\n      try {\n        setIsLoadingMessage(true);\n        setMessageError(\"\");\n        const message = await generateMotivationalMessage(tasks);\n        setMotivationalMessage(message);\n      } catch (error) {\n        setMessageError(\"Failed to load motivational message. Please try again later.\");\n        console.error(\"Error fetching motivational message:\", error);\n      } finally {\n        setIsLoadingMessage(false);\n      }\n    };\n    fetchMotivationalMessage();\n  }, [tasks]);\n  const addTask = taskText => {\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      completed: false,\n      createdAt: new Date().toISOString(),\n      date: new Date().toISOString().split(\"T\")[0]\n    };\n    setTasks(prevTasks => [newTask, ...prevTasks]);\n  };\n  const toggleTask = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n  };\n  const getTodayTasks = () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    return tasks.filter(task => task.date === today);\n  };\n  const getPreviousTasks = () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    return tasks.filter(task => task.date !== today);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-900 mb-2\",\n          children: \"Daily Todo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Stay organized and motivated with AI-powered insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(MotivationalSummary, {\n          message: motivationalMessage,\n          isLoading: isLoadingMessage,\n          error: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n          onAddTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodayTasks, {\n          tasks: getTodayTasks(),\n          onToggleTask: toggleTask,\n          onDeleteTask: deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskHistory, {\n          tasks: getPreviousTasks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"natr+iKNuDLYryOgFOCMgZGzotI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MotivationalSummary","TodayTasks","AddTaskForm","TaskHistory","generateMotivationalMessage","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","motivationalMessage","setMotivationalMessage","isLoadingMessage","setIsLoadingMessage","messageError","setMessageError","setItem","stringify","fetchMotivationalMessage","message","error","console","addTask","taskText","newTask","id","Date","now","text","completed","createdAt","toISOString","date","split","prevTasks","toggleTask","taskId","map","task","deleteTask","filter","getTodayTasks","today","getPreviousTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","onAddTask","onToggleTask","onDeleteTask","_c","$RefreshReg$"],"sources":["E:/Infogerm/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MotivationalSummary from \"./components/MotivationalSummary\";\r\nimport TodayTasks from \"./components/TodayTasks\";\r\nimport AddTaskForm from \"./components/AddTaskForm\";\r\nimport TaskHistory from \"./components/TaskHistory\";\r\nimport { generateMotivationalMessage } from \"./utils/aiService\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"todo-tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n\r\n  const [motivationalMessage, setMotivationalMessage] = useState(\"\");\r\n  const [isLoadingMessage, setIsLoadingMessage] = useState(true);\r\n  const [messageError, setMessageError] = useState(\"\");\r\n\r\n  // Save tasks to localStorage whenever tasks change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo-tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Generate motivational message on component mount\r\n  useEffect(() => {\r\n    const fetchMotivationalMessage = async () => {\r\n      try {\r\n        setIsLoadingMessage(true);\r\n        setMessageError(\"\");\r\n        const message = await generateMotivationalMessage(tasks);\r\n        setMotivationalMessage(message);\r\n      } catch (error) {\r\n        setMessageError(\r\n          \"Failed to load motivational message. Please try again later.\"\r\n        );\r\n        console.error(\"Error fetching motivational message:\", error);\r\n      } finally {\r\n        setIsLoadingMessage(false);\r\n      }\r\n    };\r\n\r\n    fetchMotivationalMessage();\r\n  }, [tasks]);\r\n\r\n  const addTask = (taskText) => {\r\n    const newTask = {\r\n      id: Date.now(),\r\n      text: taskText,\r\n      completed: false,\r\n      createdAt: new Date().toISOString(),\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n    };\r\n    setTasks((prevTasks) => [newTask, ...prevTasks]);\r\n  };\r\n\r\n  const toggleTask = (taskId) => {\r\n    setTasks((prevTasks) =>\r\n      prevTasks.map((task) =>\r\n        task.id === taskId ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  const getTodayTasks = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    return tasks.filter((task) => task.date === today);\r\n  };\r\n\r\n  const getPreviousTasks = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    return tasks.filter((task) => task.date !== today);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n        <header className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\r\n            Daily Todo App\r\n          </h1>\r\n          <p className=\"text-gray-600\">\r\n            Stay organized and motivated with AI-powered insights\r\n          </p>\r\n        </header>\r\n\r\n        <div className=\"space-y-6\">\r\n          {/* Motivational Summary Section */}\r\n          <MotivationalSummary\r\n            message={motivationalMessage}\r\n            isLoading={isLoadingMessage}\r\n            error={messageError}\r\n          />\r\n\r\n          {/* Add Task Form */}\r\n          <AddTaskForm onAddTask={addTask} />\r\n\r\n          {/* Today's Tasks Section */}\r\n          <TodayTasks\r\n            tasks={getTodayTasks()}\r\n            onToggleTask={toggleTask}\r\n            onDeleteTask={deleteTask}\r\n          />\r\n\r\n          {/* Task History Section */}\r\n          <TaskHistory tasks={getPreviousTasks()} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}